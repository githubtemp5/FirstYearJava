#BlueJ class context
comment0.params=
comment0.target=Machine()
comment0.text=\r\n\ Create\ a\ machine\ with\ default\ name\ and\ size\r\n
comment1.params=name\ rightEdge\ bottomEdge
comment1.target=Machine(java.lang.String,\ int,\ int)
comment1.text=\r\n\ \ Create\ a\ machine\ with\ given\ name\ and\ size\r\n\ \ @param\ name\ The\ name\ to\ give\ the\ machine\r\n\ \ @param\ rightEdge\ The\ maximum\ x\ coordinate\r\n\ \ @param\ bottomEdge\ The\ maximum\ y\ coordinate\r\n
comment10.params=b
comment10.target=void\ addBumper(Bumper)
comment10.text=\r\n\ Adds\ the\ bumper\ to\ the\ machine\ and\ makes\ it\ accessibe\ for\ other\ classes\r\n
comment11.params=
comment11.target=java.util.ArrayList\ getPinballs()
comment11.text=\r\n\ Returns\ the\ arrayList\ of\ pinballs\ currently\ in\ the\ machine\r\n
comment12.params=
comment12.target=java.util.ArrayList\ getBumpers()
comment12.text=\r\n\ Returns\ the\ arrayList\ of\ bumpers\ currently\ in\ the\ machine\r\n
comment13.params=
comment13.target=java.util.ArrayList\ getHoles()
comment13.text=\r\n\ Returns\ the\ arraylist\ of\ holes\ currently\ in\ the\ machine\r\n
comment14.params=
comment14.target=int\ getLeftWall()
comment14.text=\r\n\ Return\ the\ edge\ of\ the\ left-hand\ wall\r\n
comment15.params=
comment15.target=int\ getRightWall()
comment15.text=\r\n\ Return\ the\ edge\ of\ the\ right-hand\ wall\r\n
comment16.params=
comment16.target=int\ getTopWall()
comment16.text=\r\n\ Return\ the\ edge\ of\ the\ top\ wall\r\n
comment17.params=
comment17.target=int\ getBottomWall()
comment17.text=\r\nReturn\ the\ edge\ of\ the\ bottom\ wall\r\n
comment18.params=
comment18.target=int\ getLeftBottomWallLength()
comment18.text=\r\nReturn\ the\ right\ edge\ of\ the\ left\ bottom\ wall\r\n
comment19.params=
comment19.target=int\ getGapWidth()
comment19.text=\r\n\ Return\ the\ gapwidth\ in\ the\ bottom\ wall\r\n
comment2.params=object
comment2.target=void\ erase(CircleObject)
comment2.text=\r\n\ Erase\ the\ CircleOobject\ from\ the\ view\ of\ the\ pinball\ machine\r\n\ \r\n\ @param\ object\ The\ object\ to\ be\ radius\r\n
comment20.params=
comment20.target=void\ pauseMachine()
comment20.text=\r\n\ Introduces\ a\ small\ delay\ in\ ball\ movement,\ for\ smooth\ running\r\n
comment21.params=
comment21.target=void\ resetMachine()
comment21.text=\r\n\ Resets\ the\ machine\ back\ to\ initial\ view,\ with\ no\ pinballs\r\n
comment3.params=ball
comment3.target=void\ draw(PinBall)
comment3.text=\r\n\ Draw\ a\ PinBall\ at\ its\ current\ position\ onto\ the\ view\ of\ the\ pinball\ machine\r\n\ \r\n\ @param\ ball\ The\ object\ to\ be\ drawn\r\n
comment4.params=object
comment4.target=void\ draw(CircleObject)
comment4.text=\r\n\ Draw\ the\ CircleObject\ at\ its\ current\ position\ onto\ the\ view\ of\ the\ pinball\ \ machine\r\n\ \r\n\ @param\ object\ The\ object\ to\ be\ drawn\r\n
comment5.params=
comment5.target=void\ drawMachine()
comment5.text=\r\n\ Draw\ the\ edge\ of\ the\ pinball\ machine\ \r\n
comment6.params=
comment6.target=void\ gameOver()
comment6.text=\r\n\ Ends\ the\ simulation,\ making\ the\ game\ over\r\n
comment7.params=
comment7.target=boolean\ ifGameNotOver()
comment7.text=\r\n\ Returns\ a\ booolean\ value\ to\ check\ if\ the\ game\ is\ over\r\n
comment8.params=ball
comment8.target=void\ addPinBall(PinBall)
comment8.text=\r\n\ Adds\ pinball\ to\ the\ machine\ and\ makes\ it\ accessible\ for\ other\ classes\r\n
comment9.params=h
comment9.target=void\ addHole(Hole)
comment9.text=\r\n\ Adds\ the\ hole\ to\ the\ machine\ and\ makes\ it\ accessibe\ for\ other\ classes\r\n
numComments=22
